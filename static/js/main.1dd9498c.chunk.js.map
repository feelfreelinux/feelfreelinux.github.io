{"version":3,"sources":["components/Body/styles.ts","components/NameHeader/styles.ts","components/NameHeader/index.tsx","components/ProjectsSection/styles.ts","components/SectionHeader/styles.ts","components/SectionHeader/index.tsx","components/ProjectsSection/index.tsx","components/AchievementsSection/styles.ts","components/AchievementsSection/index.tsx","components/TalksSection/styles.ts","components/TalksSection/index.tsx","components/SocialHeader/styles.ts","components/SocialHeader/index.tsx","components/AboutMe/styles.ts","components/AboutMe/index.tsx","components/Body/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["BodyWrapper","styled","div","_templateObject","ContactMeWrapper","_templateObject2","_templateObject3","NameHeaderWrapper","styles_templateObject","NameSubtitleWrapper","styles_templateObject2","NameHeader","react","portfolioData","styles_NameSubtitleWrapper","React","ProjectsWrapper","ProjectsSection_styles_templateObject","ProjectCard","ProjectsSection_styles_templateObject2","ProjectTitle","styles_templateObject3","TechnologyChip","_templateObject4","ProjectDescription","_templateObject5","MoreProjects","_templateObject6","ProjectTechnologies","_templateObject7","ReadMoreWrapper","a","_templateObject8","_templateObject9","SectionHeaderWrapper","SectionHeader_styles_templateObject","SectionHeader","this","props","sectionName","ProjectsSection","_this","SectionHeader_SectionHeader","style","fontSize","padding","projects","map","e","renderProjectSection","textDecoration","href","project","gp","index_esm","color","marginRight","opacity","display","flex","name","renderGp","gh","technologies","description","AchievementsWrapper","AchievementsSection_styles_templateObject","AchievementCard","AchievementsSection_styles_templateObject2","AchievementTitle","AchievementsSection_styles_templateObject3","AchievementDescription","styles_templateObject4","AchievementsSection","achievements","index","renderAchievementSection","achievement","title","TalksWrapper","TalksSection_styles_templateObject","TalkCard","TalksSection_styles_templateObject2","TalkTitle","TalksSection_styles_templateObject3","TalkDescription","TalksSection_styles_templateObject4","TalksSection","talks","renderTalksSection","SocialProfilesWrapper","SocialHeader_styles_templateObject","SocialProfileWrapper","SocialHeader_styles_templateObject2","AboutWrapper","AboutMe_styles_templateObject","AboutMe","header","subtitle","Body","NameHeader_NameHeader","SocialHeader_NameHeader","AboutMe_AboutMe","ProjectsSection_ProjectsSection","AchievementsSection_AchievementsSection","TalksSection_TalksSection","App","react_default","createElement","Body_Body","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1dd9498c.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const BodyWrapper = styled.div`\n    flex: 'column';\n    font-size: 42px;\n`\n\nexport const NameSubtitleWrapper = styled.div`\n    font-size: 32px;\n    color: #e6e6e6;\n`\n\nexport const ContactMeWrapper = styled.div`\n    padding: 32px;\n    font-size: 20px;\n    padding-left: 72px;\n    padding-right: 72px;\n`","import styled from 'styled-components'\n\nexport const NameHeaderWrapper = styled.div`\n    padding: 48px;\n    font-size: 42px;\n    color: white;\n    background-color: linear-gradient(to right, red , yellow);\n    background: rgba(73,155,234,1);\n    background: -moz-linear-gradient(left, rgba(73,155,234,1) 0%, rgba(32,124,229,1) 100%);\n    background: -webkit-gradient(left top, right top, color-stop(0%, rgba(73,155,234,1)), color-stop(100%, rgba(32,124,229,1)));\n    background: -webkit-linear-gradient(left, rgba(73,155,234,1) 0%, rgba(32,124,229,1) 100%);\n    background: -o-linear-gradient(left, rgba(73,155,234,1) 0%, rgba(32,124,229,1) 100%);\n    background: -ms-linear-gradient(left, rgba(73,155,234,1) 0%, rgba(32,124,229,1) 100%);\n    background: linear-gradient(to right, rgba(73,155,234,1) 0%, rgba(32,124,229,1) 100%);\n    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#499bea', endColorstr='#207ce5', GradientType=1 );\n`\n\nexport const NameSubtitleWrapper = styled.div`\n    margin-top: 16px;\n    font-size: 32px;\n    color: white;\n    opacity: 0.7;\n`","import * as React from 'react'\nimport { NameHeaderWrapper, NameSubtitleWrapper } from './styles'\nimport * as portfolioData from '../../portfolioData.json'\n\nexport default class NameHeader extends React.PureComponent<{}, {}> {\n    render() {\n        return (\n        <NameHeaderWrapper>\n            {portfolioData.name}\n            <NameSubtitleWrapper>\n                {portfolioData.subtitle}\n            </NameSubtitleWrapper>\n        </NameHeaderWrapper>)\n    }\n}","import styled from 'styled-components'\n\nexport const ProjectsWrapper = styled.div`\n    padding-left: 48px;\n    padding-right: 48px;\n`\n\nexport const ProjectCard = styled.div`\n    padding-top: 16px;\n    padding-left: 16px;\n    padding-top: 8px;\n    padding-bottom: 8px;\n    font-size: 32px;\n`\nexport const ProjectTitle = styled.div`\n    font-size: 32px;\n`\n\nexport const TechnologyChip = styled.div`\n    padding: 8px;\n    color: white;\n    margin-top: 8px;\n    margin-bottom: 8px;\n    margin-right: 16px;\n    background-color: red;\n`\n\nexport const ProjectDescription = styled.div`\n    font-size: 20px;\n    margin-top: 8px;\n    font-color: grey;\n    opacity: 0.5;\n`\nexport const MoreProjects = styled.div`\n    font-size: 20px;\n    padding-left: 16px;\n    padding-right: 16px;\n    padding-bottom: 16px;\n`\n\nexport const ProjectTechnologies = styled.div`\n    font-size: 16px;\n    margin-top: 8px;\n    display: flex;\n    flex: row;\n    font-color: grey;\n    opacity: 0.5;\n`\n\nexport const ReadMoreWrapper = styled.a`\n    font-size: 16px;\n    margin-top: 16px;\n    text-decoration: none;\n`\n\nexport const ProjectLinks = styled.div`\n    font-size: 16px;\n    flex: 'row';\n`","import styled from 'styled-components'\n\nexport const SectionHeaderWrapper = styled.div`\n    width: auto;\n    height: 72px;\n    text-align: center;\n    align-items: center;\n    justify-content: center;\n    display: flex;\n    flex: row;\n    font-size: 42px;\n    color: white;\n    background-color: linear-gradient(to right, red , yellow);\n    background: rgba(73,155,234,1);\n    background: -moz-linear-gradient(left, rgba(73,155,234,1) 0%, rgba(32,124,229,1) 100%);\n    background: -webkit-gradient(left top, right top, color-stop(0%, rgba(73,155,234,1)), color-stop(100%, rgba(32,124,229,1)));\n    background: -webkit-linear-gradient(left, rgba(73,155,234,1) 0%, rgba(32,124,229,1) 100%);\n    background: -o-linear-gradient(left, rgba(73,155,234,1) 0%, rgba(32,124,229,1) 100%);\n    background: -ms-linear-gradient(left, rgba(73,155,234,1) 0%, rgba(32,124,229,1) 100%);\n    background: linear-gradient(to right, rgba(73,155,234,1) 0%, rgba(32,124,229,1) 100%);\n    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#499bea', endColorstr='#207ce5', GradientType=1 );\n\n`","import * as React from 'react'\nimport { SectionHeaderWrapper } from './styles'\n\ninterface IProps {\n    sectionName: string\n}\nexport default class SectionHeader extends React.PureComponent<IProps, {}> {\n    render() {\n        return (\n        <SectionHeaderWrapper>\n            {this.props.sectionName}\n        </SectionHeaderWrapper>)\n    }\n}","import * as React from \"react\";\nimport {\n  ProjectCard,\n  ProjectsWrapper,\n  ProjectDescription,\n  ProjectTitle,\n  ProjectTechnologies,\n  MoreProjects,\n  TechnologyChip,\n  ReadMoreWrapper\n} from \"./styles\";\nimport SectionHeader from \"../SectionHeader\";\nimport { FaGithub, FaGooglePlay } from \"react-icons/fa\";\n\ninterface Project {\n  name: string;\n  gh: string;\n  gp?: string | undefined;\n  description: string;\n  technologies: string[];\n}\n\ninterface IProps {\n  projects: Project[];\n}\n\nexport default class ProjectsSection extends React.PureComponent<IProps, {}> {\n  render() {\n    return (\n      <div>\n        <SectionHeader sectionName=\"My projects\" />\n        <ProjectsWrapper>\n          <p style={{ fontSize: 20, padding: 16 }}>\n            I love the idea of open source software - thats why most of my work\n            is open to public on my GitHub profile.\n          </p>\n          {this.props.projects.map(e => this.renderProjectSection(e))}\n          <hr />\n          <MoreProjects>\n            <a style={{ textDecoration: 'none' }} href=\"https://github.com/feelfreelinux\">And many, many more on my GitHub profile.</a>\n          </MoreProjects>\n        </ProjectsWrapper>\n      </div>\n    );\n  }\n\n  renderGp(project: Project) {\n    if (project.gp != null) {\n      return (\n        <a href={project.gp}>\n          <FaGooglePlay\n            style={{ color: \"black\", marginRight: 16, opacity: 0.7 }}\n          />\n        </a>\n      );\n    } else {\n      return <div />;\n    }\n  }\n\n  renderProjectSection(project: Project) {\n    return (\n      <div>\n        <hr />\n        <ProjectCard>\n          <div style={{ display: \"flex\", flex: \"row\" }}>\n            <ProjectTitle>{project.name}</ProjectTitle>\n            <div style={{ flex: 1 }} />\n            {this.renderGp(project)}\n            <a href={project.gh}>\n            <FaGithub style={{ color: 'black', opacity: 0.7 }} />\n            </a>\n          </div>\n          <ProjectTechnologies>\n            {project.technologies.map(e => (\n              <TechnologyChip>{e}</TechnologyChip>\n            ))}\n          </ProjectTechnologies>\n\n          <ProjectDescription>{project.description}</ProjectDescription>\n          <ReadMoreWrapper href={project.gh}>See the full description on GitHub</ReadMoreWrapper>\n        </ProjectCard>\n      </div>\n    );\n  }\n}\n","import styled from 'styled-components'\n\nexport const AchievementsWrapper = styled.div`\n    padding-left: 48px;\n    padding-right: 48px;\n    padding-top: 16px;\n    padding-bottom: 16px;\n    `\n\nexport const AchievementCard = styled.div`\n    padding: 16px;\n    font-size: 32px;\n`\nexport const AchievementTitle = styled.div`\n    font-size: 32px;\n`\nexport const AchievementDescription = styled.div`\n    font-size: 20px;\n    margin-top: 8px;\n    font-color: grey;\n    opacity: 0.5;\n`","import * as React from \"react\";\nimport {\n  AchievementCard,\n  AchievementsWrapper,\n  AchievementDescription,\n  AchievementTitle\n} from \"./styles\";\nimport SectionHeader from \"../SectionHeader\";\n\ninterface Achievement {\n  title: string;\n  description: string;\n}\n\ninterface IProps {\n  achievements: Achievement[];\n}\n\nexport default class AchievementsSection extends React.PureComponent<\n  IProps,\n  {}\n> {\n  render() {\n    return (\n      <div>\n        <SectionHeader sectionName=\"My achievements\" />\n\n        <AchievementsWrapper>\n          {this.props.achievements.map((e, index) => this.renderAchievementSection(e, index))}\n        </AchievementsWrapper>\n      </div>\n    );\n  }\n\n  renderAchievementSection(achievement: Achievement, index: number) {\n    return (\n      <div>\n        { index !== 0 ? <hr /> : <div/> }\n\n        <AchievementCard>\n          <AchievementTitle>{achievement.title}</AchievementTitle>\n          <AchievementDescription>\n            {achievement.description}\n          </AchievementDescription>\n        </AchievementCard>\n      </div>\n    );\n  }\n}\n","import styled from 'styled-components'\n\nexport const TalksWrapper = styled.div`\n    padding: 8px;\n    padding-left: 48px;\n    padding-right: 48px;\n`\n\nexport const TalkCard = styled.div`\n    padding: 16px;\n    font-size: 32px;\n    display: 'flex';\n    align-items: 'center';\n    justify-content: 'center';\n    flex: column;\n`\nexport const TalkTitle = styled.div`\n    margin-top: 8px;\n    font-size: 32px;\n`\nexport const TalkDescription = styled.div`\n    font-size: 20px;\n    margin-top: 8px;\n    font-color: grey;\n    opacity: 0.5;\n`","import * as React from \"react\";\nimport { TalkCard, TalksWrapper, TalkDescription, TalkTitle } from \"./styles\";\nimport SectionHeader from \"../SectionHeader\";\n\ninterface IProps {\n  talks: any[];\n}\n\nexport default class TalksSection extends React.PureComponent<IProps, {}> {\n  render() {\n    return (\n      <div>\n        <SectionHeader sectionName=\"See my talks\" />\n        <TalksWrapper>\n          {this.props.talks.map(e => this.renderTalksSection(e))}\n\n        </TalksWrapper>\n      </div>\n    );\n  }\n\n  renderTalksSection(project: any) {\n    return (\n      <TalkCard>\n        <TalkTitle>Flutter Warsaw (Polish)</TalkTitle>\n        <TalkDescription>\n          I gave a talk about my experience from porting Wykop Mobilny to\n          Flutter. During the talk I have compared differences between Flutter\n          and React Native based on my use case and discussed few problems\n          i've stumbled upon during the process.\n        </TalkDescription>\n        <a style={{opacity: 1.0, fontSize: 20, textDecoration: 'none'}} href=\"https://www.youtube.com/watch?v=iMs83dtqcn0\">\n            See it on youtube\n          </a>\n      </TalkCard>\n    );\n  }\n}\n","import styled from 'styled-components'\n\nexport const SocialProfilesWrapper = styled.div`\n    width: auto;\n    height: 72px;\n    text-align: center;\n    align-items: center;\n    display: flex;\n    flex: row;\n    font-size: 42px;\n    color: white;\n    background: rgba(248,80,50,1);\n    background: -moz-linear-gradient(left, rgba(248,80,50,1) 0%, rgba(241,111,92,1) 0%, rgba(240,47,23,1) 71%, rgba(231,56,39,1) 100%);\n    background: -webkit-gradient(left top, right top, color-stop(0%, rgba(248,80,50,1)), color-stop(0%, rgba(241,111,92,1)), color-stop(71%, rgba(240,47,23,1)), color-stop(100%, rgba(231,56,39,1)));\n    background: -webkit-linear-gradient(left, rgba(248,80,50,1) 0%, rgba(241,111,92,1) 0%, rgba(240,47,23,1) 71%, rgba(231,56,39,1) 100%);\n    background: -o-linear-gradient(left, rgba(248,80,50,1) 0%, rgba(241,111,92,1) 0%, rgba(240,47,23,1) 71%, rgba(231,56,39,1) 100%);\n    background: -ms-linear-gradient(left, rgba(248,80,50,1) 0%, rgba(241,111,92,1) 0%, rgba(240,47,23,1) 71%, rgba(231,56,39,1) 100%);\n    background: linear-gradient(to right, rgba(248,80,50,1) 0%, rgba(241,111,92,1) 0%, rgba(240,47,23,1) 71%, rgba(231,56,39,1) 100%);\n    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#f85032', endColorstr='#e73827', GradientType=1 );`;\n\nexport const SocialProfileWrapper = styled.a`\n    color: white;\n    margin-top: 8px;\n    flex: 1;\n`","import * as React from 'react'\nimport { SocialProfilesWrapper, SocialProfileWrapper } from './styles'\nimport { FaGithub, FaLinkedin, FaDiscord, FaTelegram, FaTwitter } from 'react-icons/fa'\n\nexport default class NameHeader extends React.PureComponent<{}, {}> {\n    render() {\n        return (\n        <SocialProfilesWrapper>\n            <SocialProfileWrapper href=\"https://github.com/feelfreelinux\"><FaGithub/></SocialProfileWrapper>\n            <SocialProfileWrapper href=\"https://pl.linkedin.com/in/filip-grzywok-b97992183\"><FaLinkedin/></SocialProfileWrapper>\n            <SocialProfileWrapper href=\"\"><FaDiscord/></SocialProfileWrapper>\n            <SocialProfileWrapper href=\"https://t.me/feelfreelinux\"><FaTelegram/></SocialProfileWrapper>\n            <SocialProfileWrapper href=\"https://twitter.com/feelfreelinux\"><FaTwitter/></SocialProfileWrapper>\n        </SocialProfilesWrapper>)\n    }\n}","import styled from 'styled-components'\n\nexport const AboutWrapper = styled.div`\n    padding: 48px;\n    font-size: 28px;\n    padding-left: 72px;\n    padding-right: 72px;\n`","import * as React from 'react'\nimport { AboutWrapper } from './styles'\n\nexport default class AboutMe extends React.PureComponent<{header: string, subtitle: string}, {}> {\n    render() {\n        return (\n        <AboutWrapper>\n            <h3>{this.props.header}</h3>\n            {this.props.subtitle}\n        </AboutWrapper>)\n    }\n}","import * as React from 'react'\nimport { BodyWrapper, ContactMeWrapper } from './styles'\nimport NameHeader from '../NameHeader'\nimport ProjectsSection from '../ProjectsSection';\nimport AchievementsSection from '../AchievementsSection';\nimport TalksSection from '../TalksSection';\nimport SocialHeader from '../SocialHeader';\nimport AboutMe from '../AboutMe';\nimport SectionHeader from '../SectionHeader';\nimport * as portfolioData from '../../portfolioData.json'\n\nexport default class Body extends React.PureComponent<{}, {}> {\n    render() {\n        return (\n            <div>\n                <NameHeader/>\n                <SocialHeader/>\n                <AboutMe header={portfolioData.aboutMeHeader} subtitle={portfolioData.aboutMeDescription}/>\n                <BodyWrapper>\n                    <ProjectsSection projects={portfolioData.projects}/>\n                    <AchievementsSection achievements={portfolioData.achievements}/>\n                    <TalksSection talks={['']}/>\n                    <SectionHeader sectionName=\"Contact me\" />\n                    <ContactMeWrapper>\n                        If you want to talk, hit me up on discord, telegram or via email at rj23@protonmail.com.\n                    </ContactMeWrapper>\n                </BodyWrapper>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport NameHeader from './components/Body'\n\nconst App: React.FC = () => {\n  return (\n      <NameHeader/>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}